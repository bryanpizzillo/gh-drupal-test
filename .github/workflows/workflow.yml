name: Workflow
on: [ push, pull_request ]
jobs:
  build:
    name: Build, Test and Upload Artifacts
    runs-on: ubuntu-18.04
    steps:
      ## This clones and checks out.
      - name: Checkout branch
        uses: actions/checkout@v2
      ## Setup node and npm caching.
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'npm'
      ## Setup PHP and Composer Caching
      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          ## This list of extensions matches those we install with our docker file.
          extensions: bz2, cli, common, curl, fpm, gd, json, mbstring, memcached, mysql, oauth, opcache, readline, sqlite3, soap, xdebug, xml
          tools: composer:v1, prestissimo
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer install
        run: |
          composer install
      ## Install BLT and Drush Launchers
      - name: Install BLT and Drush Launchers
        run: |
          curl -sL -o /usr/local/bin/drush https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar && chmod +x /usr/local/bin/drush
          curl -sL -o /usr/local/bin/blt https://github.com/acquia/blt-launcher/releases/latest/download/blt.phar && chmod +x /usr/local/bin/blt
      ## Create MySQL databases
      - name: Turn on MySQL and Create DBs
        run: |
          sudo /etc/init.d/mysql start
      - name: Setup Env
        run: |
          ## The setup env script does a few things we cannot.
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS drupal"
          mysql -u root -proot -e "GRANT ALL ON drupal.* to 'drupal'@'%' IDENTIFIED BY 'drupal'"
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS simpletest"
          mysql -u root -proot -e "GRANT ALL ON simpletest.* to 'simpletest'@'%' IDENTIFIED BY 'simpletest'"
          ## We don't set git info for right now as we are in the NCIOCPL origin right now.
      - name: Validate
        run: |
          blt validate --define drush.alias='${drush.aliases.ci}' --ansi --verbose
      - name: Setup App
        run: |
          ## The setup app script cannot create build.json as we are in the NCIOCPL origin.
          export PHANTOMJS_CDNURL=https://npm.taobao.org/mirrors/phantomjs
          blt setup --define drush.alias='${drush.aliases.ci}' --environment=ci --no-interaction --ansi --verbose
      - name: Test
        timeout-minutes: 120
        run: |
          ## Setup Simpletest info for kernel & functional tests
          export SIMPLETEST_BASE_URL=http://127.0.0.1:8888
          export SIMPLETEST_DB=mysql://simpletest:simpletest@localhost/simpletest

          #blt tests --define drush.alias='${drush.aliases.ci}' -D behat.web-driver=chrome --no-interaction --ansi --verbose

          ## Behat tests will run the server
          blt tests:behat:run --define drush.alias='${drush.aliases.ci}' --environment=ci --define tests.run-server=true -D behat.web-driver=chrome --ansi --verbose

          ## PHP Unit tests do not start the server
          ##blt tests:server:start --define drush.alias='${drush.aliases.ci}' --environment=ci --define tests.run-server=true -D behat.web-driver=chrome --ansi -verbose
          drush rs 0.0.0.0:8888 &
          blt custom:paratest  --define drush.alias='${drush.aliases.ci}' --environment=ci --define tests.run-server=true -D behat.web-driver=chrome --ansi -verbose
          blt tests:server:kill --define drush.alias='${drush.aliases.ci}' --environment=ci --define tests.run-server=true -D behat.web-driver=chrome --ansi --verbose

## Build Artifact here
